============================================================================================================================================
==========================================================USER TESTS========================================================================
============================================================================================================================================
  
  
1. User Creation POST /users
Successful Queries:
Inserting student: 
 
  ->Inserting admin: {"id":15}
  
  
  ->Failed Queries:
  ->Non admin attempts to make admin: {"error":"The request body was either not present or did not contain valid fields"}
  
  ->Request body not filled: {"error":"The request body was either not present or did not contain valid fields"}
 
 
2. User Login POST /users/login
Successful Queries:
  ->Bearer Token for login: {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjQsImlhdCI6MTU5MTgwNjcwMSwiZXhwIjoxNTkxODkzMTAxfQ.ozkRNWJ545D_f4lAfX2w0XX_FH_TWxT_WS1vZUAlirs"}
 
 
Failed Queries:
  ->Unauthentic user: {"error":"User password or email is invalid"}
 
  ->Request body not filled: {"error":"The request body was either not present or did not contain valid fields"}
 
 
3. GET user information GET /users
Successful Queries:
  ->User information: [{"subject":"CS","number":"493","title":"Cloud Application Development","term":"sp20","instructorId":2},{"subject":"CS","number":"492","title":"Mobile Development","term":"w20","instructorId":2},{"subject":"PH","number":"212","title":"Physics: electromagnetism","term":"f18","instructorId":2}]
 
 
Failed Queries:
  ->Unauthentic user: {"error":"The request cannot be carried out by unauthenticated user"}
 
  ->Attempting to access other users data: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
============================================================================================================================================
=======================================================COURSE TESTS=========================================================================
============================================================================================================================================
1. Fetch all courses GET /courses
  ->Filtered Response: {"courses":[{"courseId":1,"number":"493","subject":"CS","title":"Cloud Application Development","term":"sp20","instructorId":2},{"courseId":9,"number":"493","subject":"CS","title":"Cloud Application Development","term":"sp20","instructorId":2}],"totalPages":null,"pageSize":5,"count":{"courseId":15},"links":{}}
 
  ->Less filtered Response: {"courses":[{"courseId":1,"number":"493","subject":"CS","title":"Cloud Application Development","term":"sp20","instructorId":2},{"courseId":2,"number":"492","subject":"CS","title":"Mobile Development","term":"w20","instructorId":2},{"courseId":3,"number":"122","subject":"WR","title":"Writing for Buisness","term":"w19","instructorId":3},{"courseId":4,"number":"206","subject":"PS","title":"Sociology: The New Jim Crow","term":"f18","instructorId":3},{"courseId":5,"number":"306","subject":"MTH","title":"Linear Algebra and Power Series","term":"sp19","instructorId":3}],"totalPages":null,"pageSize":5,"count":{"courseId":15},"links":{}}
 
 
Failed Queries:
  ->User is not authentic: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
2. Create a course POST /courses 
Successful Queries:
  ->Inserting course: {"id":24}
 
 
Failed Queries:
  ->Unauthenticated user: {"error":"The request cannot be carried out by unauthenticated user"}
 
  ->Req body incomplete: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
  ->Instructor id doesn't match class they are making: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
3. Provides summary of course GET courses/{id}
Successful Queries:
  ->Course 3 summary: [{"subject":"WR","number":"122","title":"Writing for Buisness","term":"w19","instructorId":3}]
 
 
Failed Queries:
  ->Unauthentic user: {"error":"The request cannot be carried out by unauthenticated user"}
 
Course not found: {"error":"Specified course id was not found"}
 
 
4. Update a course PATCH courses/{id}
Successful Queries:
  ->Update Class: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
 
Failed Queries:
  ->Req body incomplete: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
  ->Unauthenticated user: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
  ->No course by id: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
 
5. DELETES a course DELETE courses/{id}
Successful Queries:
  ->Delete success: 
 
 
Failed Queries:
  ->Course not found: {"error":"Specified course Id not found"}
 
  ->Unauthenticated user: {"error":"Specified course Id not found"}
 
 
6. GET list of students enrolled in course GET courses/{id}/students
Successful Queries:
  ->Student List: {"students":[{"studentId":7},{"studentId":12},{"studentId":5},{"studentId":7}]}
 
 
Failed Queries:
  ->Unauthorized user: {"error":"The request cannot be carried out by unauthenticated user"}
 
  ->No course found: {"error":"Specified course does not exist"}
 
 
7. Update enrollment for students POST /courses/{id}/students
Successful Queries:
  ->Admin Unenrolled/Enrolled students: <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>SyntaxError: Unexpected token , in JSON at position 10<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/types/json.js:89:19)<br> &nbsp; &nbsp;at /mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/read.js:121:18<br> &nbsp; &nbsp;at invokeCallback (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:224:16)<br> &nbsp; &nbsp;at done (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:213:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:273:7)<br> &nbsp; &nbsp;at emitNone (events.js:106:13)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js:208:7)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js:1064:12)<br> &nbsp; &nbsp;at _combinedTickCallback (internal/process/next_tick.js:138:11)</pre>
</body>
</html>
 
  ->Instructor Unenrolled/Enrolled students: <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>SyntaxError: Unexpected token , in JSON at position 10<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/types/json.js:89:19)<br> &nbsp; &nbsp;at /mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/read.js:121:18<br> &nbsp; &nbsp;at invokeCallback (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:224:16)<br> &nbsp; &nbsp;at done (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:213:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:273:7)<br> &nbsp; &nbsp;at emitNone (events.js:106:13)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js:208:7)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js:1064:12)<br> &nbsp; &nbsp;at _combinedTickCallback (internal/process/next_tick.js:138:11)</pre>
</body>
</html>
 
 
Failed Queries:
  ->Instructor doesn't teach class: <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>SyntaxError: Unexpected token , in JSON at position 10<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/types/json.js:89:19)<br> &nbsp; &nbsp;at /mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/read.js:121:18<br> &nbsp; &nbsp;at invokeCallback (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:224:16)<br> &nbsp; &nbsp;at done (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:213:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:273:7)<br> &nbsp; &nbsp;at emitNone (events.js:106:13)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js:208:7)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js:1064:12)<br> &nbsp; &nbsp;at _combinedTickCallback (internal/process/next_tick.js:138:11)</pre>
</body>
</html>
 
  ->Course not found: <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>SyntaxError: Unexpected token , in JSON at position 10<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/types/json.js:89:19)<br> &nbsp; &nbsp;at /mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/body-parser/lib/read.js:121:18<br> &nbsp; &nbsp;at invokeCallback (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:224:16)<br> &nbsp; &nbsp;at done (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:213:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (/mnt/c/Users/Blake Hudson/source/sp20/final-project-hunter2/node_modules/raw-body/index.js:273:7)<br> &nbsp; &nbsp;at emitNone (events.js:106:13)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js:208:7)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js:1064:12)<br> &nbsp; &nbsp;at _combinedTickCallback (internal/process/next_tick.js:138:11)</pre>
</body>
</html>
 
 
8. Fetch CSV containing list of student enrollment GET /courses/{id}/roster
Successful Queries:
  ->CSV Response: "studentId","name","email"
7,"Lebron James","ljames@theking.com"
13,"Bernardo Sanchez","bsanchez@class.com"
12,"Kendrick Lamar","best@freestyle.com"
4,"Bill Burr","billburr@comedy.com"
 
 
Failed Queries:
  ->Course not found: {"error":"Specified course does not exist"}
 
  ->Unauthenticated user: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
9. Return list containing asignment ids GET /courses/{id}/assignments
Successful Queries:
  ->Class Assignments: {"error":"Requested resource /courses/5/assignments does not exist"}
 
 
Failed Queries:
  ->Unauthenticated user: {"error":"Requested resource /courses/5/assignments does not exist"}
 
  ->No course was found: {"error":"Requested resource /courses/500/assignments does not exist"}
 
 
============================================================================================================================================
=====================================================ASSIGNMENT TESTS=======================================================================
============================================================================================================================================
 
1. Create new assignment POST /assignments
Successful Queries:
  ->Created new assignment: {"id":77}
 
 
Failed Queries:
  ->Unauthenticated user: {"error":"The request cannot be carried out by unauthenticated user"}
 
  ->Req body incomplete: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
 
2. Returns summary data on assignment GET /assignments/{id}
Successful Queries:
  ->Assignment Summary: [{"courseId":8,"title":"Lab 4","points":100,"due":"2020-06-14T17:00:00-023:59"}]
 
 
Failed Queries:
  ->No assignment by id: {"error":"Specified Id was not found"}
 
Unauthenticated user: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
3. Partial update on data for assignment PATCH /assignments/{id}
Successful Queries:
  ->Update for assignment: {"success":"Success updating assignment"}
 
 
Failed Queries:
  ->Req body is incomplete: {"error":"The request body was either not present or did not contain any fields related to Course objects."}
 
  ->Unauthorized user: {"error":"The request cannot be carried out by unauthenticated user"}
 
4. Delete a assignment, all its submissions DELETE /assignments/{id}
Successful Queries:
  ->Successful Deletion: 
 
 
Failed Queries:
  ->Unauthorized user: {"error":"The request cannot be carried out by unauthenticated user"}
 
  ->No assignment found by id: {"error":"Specified Id was not found"}
 
 
5. Return list of all submissions for assignment. paginated GET /assignments/{id}/submissions
Successful Queries:
  ->List submissions: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
Failed Queries:
  ->Unauthorized user: {"error":"The request cannot be carried out by unauthenticated user"}
 
 
6. Create new submission for assignment(student entrypoint) POST /assignments/{id}/submissions
Successful Queries:
  ->Succesful upload: {"id":33}
 
 
Failed Queries:
  ->No assignmnent by id: {"error":"Error processing file please re-upload"}
 
  ->Unauthorized user: {"error":"The request cannot be carried out by unauthenticated user"}
